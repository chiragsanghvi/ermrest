#!/usr/bin/env python

import sys
import ermrest

def usage():
    message = """
usage: ermrest-registry-lookup [--key <keyname>] <catalog id>

This utility looks up a catalog in the ERMrest registry and returns
its catalog descriptor. Run this utility under the deployed ERMrest 
daemon account.

Options:

    --key <keyname>     Return only the <keyname> field from the 
                        catalog descriptor.

Arguments:

    <catalog id>        The EMRrest catalog identifier.

Exit status:

  0  success
  1  command-line usage error
  2  registry not configured
  3  catalog not found
  4  key not found
  5  other runtime errors
"""
    sys.stderr.write(message)


def main(argv):

    # Check arg length
    arglen = len(argv)
    if arglen not in [1, 3]:
        sys.stderr.write("Bad arguments.")
        usage()
        return 1

    # Get required 'catalog id' argument
    catalog_id = argv[-1]

    # Get optional 'keyname' argument
    keyname = None
    if arglen == 3:
        if argv[0] != '--key':
            sys.stderr.write("Unknown option.")
            usage()
            return 1
        keyname = argv[1]

    # Check if registry configured 
    if not ermrest.registry:
        sys.stderr.write("ERMrest catalog registry not configured.\n")
        return 2

    # Lookup catalog
    result = ermrest.registry.lookup(catalog_id)
    if not result:
        sys.stderr.write("Catalog '%s' not found in registry.\n" % catalog_id)
        return 3
    assert len(result) == 1
    catalog_descriptor = result[0]['descriptor']
   
    # Output optional key value only
    if keyname:
        keyval = catalog_descriptor.get(keyname)
        if not keyval:
            sys.stderr.write("Key '%s' not found in Catalog descriptor.\n" % keyname)
            return 4
        sys.stdout.write( str(keyval) )
    else:
        sys.stdout.write( str(catalog_descriptor) )

if __name__ == '__main__':
    sys.exit( main(sys.argv[1:]) )
